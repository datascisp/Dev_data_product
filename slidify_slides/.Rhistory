mean(rpois(10,1))
mean(rpois(100,1))
mean(rpois(1000,1))
mean(rpois(100000,1))
lmd_rate <- 1785/100
lmd_rate
ppois(11,lmd_rate*1785)
ppois(100,lmd_rate*1785)
ppois(10,lmd_rate)
ppois(11,lmd_rate)
ppois(lmd_rate,lmd_rate)
ppois(10,lmd_rate)
n=9
m1 = -3
m2 <- 1
sd1 <- 1.5
sd2 <- 1.8
md <- m1-m2
ms
md
v1 <- rnorm(100)
v11 <- v1[1:50]
v12 <- v2[51:100]
v12 <- v1[51:100]
sd(v1)
sd(v11)
sd(v2)
sd(v12)
v1 <- rnorm(50,10,1)
v2 <- rnorm(50,10,5)
v11 <- c(v1,v2)
var(v1)
var(v2)
var(v11)
0.5(var(v1)+var(v2))
0.5*(var(v1)+var(v2))
sd_p <- sqrt( (0.5*((sd1^2)+(sd2^2)))
)
sd_p
se <- sd_p
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
se <- sd_p/3
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
se <- sd_p/3
conf_int <- md + (c(1,-1)*qnorm(0.95)*se)
conf_int
se <- sd_p/3
conf_int <- md + (c(1,-1)*qnorm(0.95)*sd_p)
conf_int
sd_p <- sqrt( (0.5*((sd1^2)+(sd2^2))))
se <- sd_p/3
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
conf_int <- md + (c(1,-1)*qt(0.975,8)*se)
conf_int
conf_int <- md + (c(1,-1)*qt(0.95,8)*se)
conf_int
conf_int <- md + (c(1,-1)*qt(0.95,8)*sd_p)
conf_int
conf_int <- md + (c(1,-1)*qt(0.975,8)*sd_p)
conf_int
conf_int <- -4 + (c(1,-1)*qt(0.975,8)*sw)
conf_int <- -4 + (c(1,-1)*qt(0.975,8)*se)
conf_int
conf_int <- -4 + (c(1,-1)*qt(0.95,8)*se)
conf_int
sd_p <- sqrt( (0.5*((sd1^2)+(sd2^2))))
se <- sd_p/3
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
var(v11)
var(v1)
var(v2)
mean(v1,v2)
mean(c(v1,v2))
mean(c(var(v1),var(v2)))
sd_p <- sqrt( (((sd1^2)+(sd2^2))/6))
sd_p
conf_int <- md + (c(1,-1)*qnorm(0.975)*sd_p)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.95)*sd_p)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.975)*sd_p)
conf_int
conf_int <- md + (c(1,-1)*qt(0.975,8)*sd_p)
conf_int
conf_int <- md + (c(1,-1)*qt(0.95,8)*sd_p)
conf_int
sd_p <- sqrt( (((sd1^2)+(sd2^2))*3/2))
sd_p
conf_int <- md + (c(1,-1)*qnorm(0.975)*sd_p)
conf_int
se <- sd_p/3
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.95)*se)
conf_int
se <- sd_p/sqrt(18)
se
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.95)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
conf_int <- md + (c(1,-1)*qt(0.975,16)*se)
conf_int
conf_int <- md + (c(1,-1)*qt(0.975,8)*se)
conf_int
conf_int <- md + (c(1,-1)*qt(0.95,8)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
?power.t.test
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.95)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.9)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(0.99)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(1-0.01)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(1-0.001)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(1-0.0000001)*se)
conf_int
conf_int <- md + (c(1,-1)*qnorm(1-0.00000000001)*se)
conf_int
mn1 <- c(1077, 1123)
mn1
mn1 <- mean(c(1077, 1123))
mn1
mo=1078
sample_mean <- 1100
md <- sample_mean - mo
qnorm(0.95)
se1 <- 1123-1077
se2 <- se1/(2*qnorm(0.95))
se2
sd1 <- se2*3
sd1
1100 + (c(-1,1)*qt(0.975,8)*se2)
1100 + (c(-1,1)*qt(0.95,8)*se2)
1100 + (c(-1,1)*qt(0.95,9)*se2)
1100 + (c(-1,1)*qt(0.95,8)*se2)
1100 + (c(-1,1)*qt(0.9,8)*se2)
1100 + (c(-1,1)*qt(0.95,8)*se2)
1100 + (c(-1,1)*qt(0.975,8)*se2)
1100 + (c(-1,1)*qt(0.05,8)*se2)
1100 + (c(1,-1)*qt(0.05,8)*se2)
1100 + (c(1,-1)*qt(0.975,8)*se2)
1100 + (c(1,-1)*qt(0.975,8,lower.tail=T)*se2)
1100 + (c(1,-1)*qt(0.05,8,lower.tail=T)*se2)
1100 + (c(1,-1)*qt(0.025,8,lower.tail=T)*se2)
1100 + (c(1,-1)*qt(0.05,8,lower.tail=T)*se2)
1100 + (c(1,-1)*qt(-0.05,8,lower.tail=T)*se2)
1100 + (c(1,-1)*qt(0.05,8,lower.tail=T)*se2)
1100 + (c(1,-1)*qt(0.95,8,lower.tail=T)*se2)
power.t.test(n=100,delta=0.01,sig.level=0.05,sd=0.04,type="one.sample")
power.t.test(n=100,delta=0.01,sig.level=0.05,sd=0.04,type="one.sample",alternative="two.sided")
power.t.test(n=100,delta=0.01,sig.level=0.05,sd=0.04,type="one.sample",alternative="one.sided")
power.t.test(power=0.9,delta=0.01,sig.level=0.05,sd=0.04,type="one.sample",alternative="one.sided")
power.t.test(n=100,delta=0.01,sig.level=0.15,sd=0.04,type="one.sample",alternative="one.sided")
power.t.test(n=100,delta=0.01,sig.level=0.05,sd=0.04,type="one.sample",alternative="one.sided")
n1=288
mn1 <- 44
n2 <- 288
mn2 <- 42.04
?t.test
?power.t.test
power.t.test(n=n1,delta=mn2-mn1,sig.level=0.05,sd=12,type="two.sample",alternative="one.sided")
(sqrt(288)*(mn2-mn1)/12)
n=9
m1 = -3
m2 <- 1
sd1 <- 1.5
sd2 <- 1.8
sd_p <- sqrt( (0.5*((sd1^2)+(sd2^2))))
se <- sd_p/sqrt(2/9)
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
se <- sd_p*sqrt(2/9)
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
md <- -2
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
conf_int <- md + (c(1,-1)*qt(0.975,8)*se)
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
sd_p <- sqrt( (0.5*((sd1^2)+(sd2^2))))
se <- sd_p*sqrt(2/9)
conf_int <- md + (c(1,-1)*qnorm(0.975)*se)
conf_int
sd_p2 <- sqrt((8 * sd1^2 + 8 * sd2^2) / (9 + 9 - 2))
sd_p2
sd_p
se
se <- sd_p*sqrt(1/9+1/9)
se
conf_int <- md + (c(1,-1)*qt(0.975,8)*se)
conf_int
md <- -4
conf_int <- md + (c(1,-1)*qt(0.975,8)*se)
conf_int
n1=288
m1 <- 44
n2 <- 288
m2 <- 42.04
sd1=12
sd1 <- 12
sd2 <- 12
sd_p <- sqrt(((n1-1) * sd1^2 + (n2-1) * sd2^2) / (n1 + n2 - 2))
se <- sd_p*sqrt(1/n1+1/n2)
conf_int <- md + (c(1,-1)*qt(0.975,8)*se)
conf_int
n1=288
m1 <- 44
n2 <- 288
m2 <- 42.04
sd1=12
sd1 <- 12
sd2 <- 12
sd_p <- sqrt(((n1-1) * sd1^2 + (n2-1) * sd2^2) / (n1 + n2 - 2))
se <- sd_p*sqrt(1/n1+1/n2)
conf_int <- md + (c(1,-1)*qt(0.975,n1+n2-2)*se)
conf_int
n1=288
m1 <- 44
n2 <- 288
m2 <- 42.04
sd1=12
sd1 <- 12
sd2 <- 12
sd_p <- sqrt(((n1-1) * sd1^2 + (n2-1) * sd2^2) / (n1 + n2 - 2))
se <- sd_p*sqrt(1/n1+1/n2)
conf_int <- md + (c(1,-1)*qt(0.95,n1+n2-2)*se)
conf_int
?pt
md
n1=288
m1 <- 44
n2 <- 288
m2 <- 42.04
md <- m1-m2
sd1=12
sd1 <- 12
sd2 <- 12
sd_p <- sqrt(((n1-1) * sd1^2 + (n2-1) * sd2^2) / (n1 + n2 - 2))
se <- sd_p*sqrt(1/n1+1/n2)
conf_int <- md + (c(1,-1)*qt(0.975,n1+n2-2)*se)
conf_int
pt(md/se,n1+n2-2)
pt(0,n1+n2-2)
pt(md/se,n1+n2-2,lower.tail=F)
v1 <- rnorm(1000,44,12)
v2 <- rnorm(1000,42.04,12)
v11 <- sample(288,v1)
length(v11)
?sample
v11 <- sample(v1,288)
?sample
length(v11)
v22 <- sample(v2,288)
length(v12)
t.test(v11,v22,alternative="two.sided")
t.test(v11,v22,alternative="two.sided",var.equal=T)
sd(v11)
sd(v22)
sd(v1)
sd(v2)
?t.test
pnorm(md/se,lower.tail=F)
?qnrom
?qnorm
qnorm(0.95)
qnorm(0.95,12,4/10)
v1 <- rnorm(10000,12,4)
v2 <- sample(v1,100)
sd(v1)
sd(v2)
t.test(v2,alternative="greater")
qnorm(0.95,12,4)
power.t.test(power=0.9,delta=0.01,sig.level=0.05,sd=0.04,type="paired",alternative="one.sided")
?power.t.test
qnorm(0.95)
0.5*sqrt(1/qnorm(0.95))
qnorm(0.9)
t1 <- qnorm(0.95) - qnorm(0.9)
t1
n <- 0.5*(sqrt(1/t1))
n1
n1
n
qnorm(0.9,lower.tail=T)
0.01/0.04
n <- 1/(16*(t1^2))
n
n <- 16*(t1^2)
n
t1
qnorm(0.9,lower.tail=T)
t1 <- qnorm(0.9,lower.tail=F) - qnorm(0.9,lower.tail=T)
t1
t1 <- qnorm(0.95,lower.tail=F) - qnorm(0.9,lower.tail=T)
t1
n <- 16*(t1^2)
n
power.t.test(power=0.9,delta=0.01,sig.level=0.05,sd=0.04,type="paired",alternative="one.sided")
n1=288
m1 <- 44
n2 <- 288
m2 <- 42.04
md <- m1-m2
sd1=12
sd1 <- 12
sd2 <- 12
sd_p <- sqrt(((n1-1) * sd1^2 + (n2-1) * sd2^2) / (n1 + n2 - 2))
se <- sd_p*sqrt(1/n1+1/n2)
pt(md/se,n1+n2-2)
pt(md/se,n1+n2-2,lower.tail=F)
pt(md/se,n1+n2-2,lower.tail=F)*2
t1 <- qt(0.05,lower.tail=F)
t1 <- qt(0.05,99,lower.tail=F)
t1
x1 <- 12 + t1*4/10
x1
x1 <- 12 - t1*4/10
x1 <- 12 + t1*4/10
x2 <- 12 - t1*4/10
x1
x2
(x2-12)/0.4
x1 <- rnorm(100,12,4)
x1
mean(x1)
sd(x1)
t.test(x1,alternative="greater")
t.test(x1,mu=11.39316,alternative="greater")
quit()
install.packages(c("AppliedPredictiveModeling", "C50", "cairoDevice", "car", "caret", "caTools", "e1071", "effects", "epiR", "FactoMineR", "forecast", "FrF2", "markdown", "swirl"))
quit()
quit()
install.packages("arules")
quit()
data(iris)
str(irirs)
str(iris)
attach(iris)
cor(Sepal.Length,Sepal.Width)
lm1 <- lm(Sepal.Length~Sepal.Width,data=iris)
lm1
(sd(Sepal.Length)*cor(Sepal.Length,Sepal.Width))/sd(Sepal.Width)
mean(Sepal.Length) - -0.2233611*mean(Sepal.Width)
quit()
1/0.99
99+98901
99/99000
1-(1/1000)
999+1
1/0.99
(1/0.99)-1
(999/0.99)-999
1/11
quit()
setwd("C:/Coursera/Developing Data Products/Project")
require(slidify)
publish_rpubs(title="Developing Data Products",html_file="./slidify_slides/index.html")
require(RCurl)
publish_rpubs(title="Developing Data Products",html_file="./slidify_slides/index.html")
??rpubsUpload
rpubsUpload(title="Developing Data Products",html_file="./slidify_slides/index.html")
require(markdown)
rpubsUpload(title="Developing Data Products",html_file="./slidify_slides/index.html")
rpubsUpload(title="Developing Data Products",htmlFile="./slidify_slides/index.html")
rpubsUpload(title="Developing Data Products",htmlFile="./slidify_slides/index.html",method="internal")
require(slidify)
slidify("./slidify_slides/index.Rmd")
browseURL("./slidify_slides/index.Rmd")
browseURL("./slidify_slides/index.html")
rpubsUpload(title="Developing Data Products",htmlFile="./slidify_slides/index.Rmd",method="internal")
rpubsUpload(title="Developing Data Products",htmlFile="./slidify_slides/index.html",method="internal")
result <- rpubsUpload(title="Developing Data Products",htmlFile="./slidify_slides/index.html",method="internal")
if (!is.null(result$continueUrl))
browseURL(result$continueUrl) else stop(result$error)
updateResult <- rpubsUpload("Developing Data Products", "./slidify_slides/index.html", result$id)
setwd("./slidify_slides/")
updateResult <- rpubsUpload("Developing Data Products Project", "index.html", result$id)
result <- rpubsUpload(title="Developing Data Products Project",htmlFile="index.html",method="internal")
if (!is.null(result$continueUrl))
browseURL(result$continueUrl) else stop(result$error
)
getwd()
setwd()
setwd("../")
getwd()
runApp
require(shiny)
runApp
runApp()
?deployApp()
?runApp
?deployApp
??deployApp
require(shinyapps)
deployApp(appName="Project")
install.packages("rmarkdown")
require(rmarkdown)
require(markdown)
deployApp(appName="Project")
require(knitr)
deployApp(appName="Project")
require(rdevtools)
require(rdevtool)
require(devtools)
devtools::install_github("rstudio/rmarkdown")
require(rmarkdown)
deployApp(appName="Project")
deployApp()
runApp()
getwd()
deployApp("shinyapps")
deployApp()
getwd()
deployApp("../Project/")
setwd("../Project/")
setwd("../")
getwd()
deployApp("Project")
runApp()
cd Project
setwd("./Project/")
runApp()
render("./help.Rmd", pdf_document(latex_engine = "lualatex"))
install.packages("pandoc")
https://github.com/jgm/pandoc.git
install_github(username="jgm",repo="pandoc")
install.packages("pandoc")
deployApp(appDir="Project",appName="Developing Data Products",account="omkamal")
deployApp(appName="Developing Data Products",account="omkamal")
quit()
install.packages("shiny")
shinyapps::setAccountInfo(name='datascisp', token='B9BD70F165597AF4DF6D621C38404E3C', secret='QFysi584sNEkC0EcJWCM4okNZ6E89yf3GgUAE+m+')
install.packages("shinyapps")
shiny::setAccountInfo(name='datascisp', token='B9BD70F165597AF4DF6D621C38404E3C', secret='QFysi584sNEkC0EcJWCM4okNZ6E89yf3GgUAE+m+')
shinyapps::setAccountInfo(name='datascisp', token='B9BD70F165597AF4DF6D621C38404E3C', secret='QFysi584sNEkC0EcJWCM4okNZ6E89yf3GgUAE+m+')
install.packages('devtools')
devtools::install_github("rstudio/shinyapps")
shinyapps::setAccountInfo(name='datascisp', token='B9BD70F165597AF4DF6D621C38404E3C', secret='QFysi584sNEkC0EcJWCM4okNZ6E89yf3GgUAE+m+')
prepare_data_frame <- function(outcome,predictors) {
shiny::runApp()
shiny::runApp()
shiny::runApp()
publish()
install.packages("slidify")
publish(user="datascisp", repo=Dev_data_product, host='github')
library(slidify)
library("slidify")
publish(user="datascisp", repo="Dev_data_product"")
index.html
setwd("F:/MOOC/Data Science/9. Developing Data Products/Developing-Data-Products-master/slidify_slides")
publish(user="datascisp", repo="Dev_data_product"")
publish(user="datascisp", repo="Dev_data_product")
pkgs <- c("slidify", "slidifyLibraries", "rCharts")
install_github(pkgs, 'datascisp', ref = 'Dev_data_product')
publish('MyDeck', user="datascisp", repo="Dev_data_product")
require('slidify')
require(slidify)
install.packages("slidify")
install_github("slidify", "ramnathv")
install.packages('devtools')
install_github("slidify", "ramnathv")
devtools::install_github("slidify, "ramnathv")
devtools:install_github("slidify, "ramnathv")
devtools:install_github("slidify", "ramnathv")
devtools::install_github("slidify", "ramnathv")
devtools::install_github("slidifyLibraries", "ramnathv")
publish(user="datascisp", repo="Dev_data_product"")
publish(user="datascisp", repo="Dev_data_product")
devtools::install_github("git", "ramnathv")
devtools::install_github("git")
publish('myDeck', 'ramnathv')
slidify("index.Rmd")
devtools::slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
publish(user="datascisp", repo="Dev_data_product"")
publish(user="datascisp", repo="Dev_data_product)
publish(user="datascisp", repo="Dev_data_product")
publish(user="datascisp", repo="Dev_data_product")
publish(user="datascisp", repo="Dev_data_product")
publish(user="datascisp", repo="datascisp.github.io/Dev_data_product")
publish(user="datascisp.github.io", repo="Dev_data_product")
publish(user="datascisp", repo="datascisp.github.io")
publish_github(datascisp, Dev_data_product)
publish_github(datascisp, Dev_data_product)
publish_github(datascisp, Dev_data_product)
publish_github(datascisp, Dev_data_product)
library(slidify)
slidify("index.Rmd")
publish_github(datascisp, Dev_data_product)
publish_github(datascisp, datascisp.github.io)
publish_github(datascisp, slidify_slides)
publish_github(datascisp, slidify_slides)
publish_github(datascisp, Dev_data_product)
library(slidify)
slidify("index.Rmd")
publish_github(datascisp, Dev_data_product)
publish_github(datascisp, Dev_data_product)
